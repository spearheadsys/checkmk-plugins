#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2016             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


#ibNetworkMonitorDNSNonAAT5AvgLatency(.1.3.6.1.4.1.7779.3.1.1.2.1.3.1.2.2.1.0)--DNS NonAAT5 Latency
infoblox_nonaat5_latency_default_levels = (50, 100)

def inventory_infoblox_nonaat5_latency(info):
    item = "DNS NonAAT5 Latency"
    yield item, {}


def check_infoblox_nonaat5_latency(item, params, info):
    latency=int(info[0][0])
    if params:
        warn, crit = params['infoblox_latency']
    else:
        warn, crit = (50, 100)
    state = 0
    latency_info = ""
    if latency > warn:
        if latency > crit:
            state = 2
            latency_info = "Latency is %s ms (crit above %s ms)" % (latency, crit)
        else:
            state = 1
            latency_info = "Latency is %s ms (warn above %s ms)" % (latency, warn)
    else:
        latency_info = "Latency is %s ms" % latency
    yield state, latency_info, [('Latency', latency, warn, crit)]          

check_info['infoblox_nonaat5_latency'] = {
    'default_levels_variable': 'infoblox_nonaat5_latency_default_levels',
    'inventory_function': inventory_infoblox_nonaat5_latency,
    'check_function': check_infoblox_nonaat5_latency,
    'service_description': '%s',
    'snmp_info': ( ".1.3.6.1.4.1.7779.3.1.1.2.1.3.1.2.2.1", ["0"] ),
    'snmp_scan_function': scan_infoblox,
    'has_perfdata': True,
    'group': 'infoblox_latency',
    'includes':  ["infoblox.include"],
}

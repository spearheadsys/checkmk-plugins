#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2017             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.



def inventory_storeonce_stores_team(parsed):
    for key, values in parsed.iteritems():
        yield ("Store %s Store %s" % \
                (values["Store ID"], values["Name"]), \
                {})


def check_storeonce_stores_team(item, params, parsed):
    for key, values in parsed.iteritems():
        item_name = "Store %s Store %s" % \
                (values["Store ID"], values["Name"])
        if not item == item_name:
            continue

        state = translate_storeonce_status(values["Health Level"])
        size = float(values["Size On Disk"])
        yield state, "Status: %s, Size: %s" % \
                (values["Status"], get_bytes_human_readable(size)), \
                [ ("data_size", size) ]

        if "Dedupe Ratio" in values:
            dedup = float(values["Dedupe Ratio"])
            yield 0, "Dedup ratio: %.2f" % dedup, \
                        [ ( "dedup_rate", dedup) ]
        if not values["Description"] == "":
            yield 0, "Description: %s" % values["Description"]


check_info['storeonce_stores_team'] = {
    'parse_function'        : parse_storeonce_servicesets_team,
    'inventory_function'    : inventory_storeonce_stores_team,
    'check_function'        : check_storeonce_stores_team,
    'service_description'   : '%s',
    'has_perfdata'          : True,
    'includes'              : [ "storeonce.include" ],
}

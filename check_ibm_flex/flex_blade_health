#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# SpearHead Systems
#

# Example excerpt from SNMP data:
# .1.3.6.1.4.1.2.3.51.2.2.7.1.0  255
# .1.3.6.1.4.1.2.3.51.2.2.7.2.1.1.1  1
# .1.3.6.1.4.1.2.3.51.2.2.7.2.1.2.1  "Good"
# .1.3.6.1.4.1.2.3.51.2.2.7.2.1.3.1  "No critical or warning events"
# .1.3.6.1.4.1.2.3.51.2.2.7.2.1.4.1  "No timestamp"


def inventory_flex_blade_health(info):
    if len(info) == 1:
        return [(None, None, None)]

def check_flex_blade_health(_no_item, _no_params, info):
    state = info[0][0]
    descr = ": " + ", ".join([ line[1] for line in info if len(line) > 1 ])

    if state == "255":
        return (0, "State is good")
    elif state == "2":
        return (2, "State is degraded (non critical)" + descr)
    elif state == "4":
        return (1, "State is degraded (system level)" + descr)
    elif state == "0":
        return (2, "State is critical!" + descr)
    else:
        return (3, "Undefined state code %s%s" % (state, descr))



check_info["flex_blade_health"] = {
    'check_function':          check_flex_blade_health,
    'inventory_function':      inventory_flex_blade_health,
    'service_description':     'IBM Flex Summary health state',
    'snmp_info':               ('.1.3.6.1.4.1.2.3.51.2.2.7', ['1.0', '2.1.3.1']),
    'snmp_scan_function':      \
     lambda oid: re.match('IBM Flex Chassis Management Module', oid(".1.3.6.1.2.1.1.1.0")) != None,
}
